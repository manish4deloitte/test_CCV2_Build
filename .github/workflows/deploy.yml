name: CCV2 Deploy

on:
  workflow_dispatch:
    inputs:
      buildCode:
        description: "Build Code"
        type: string
        required: true
      targetEnvironment:
        description: "Target Environment"
        required: true
        type: choice 
        default: d1
        options: 
        - d1
        - s1
      systemUpdate:
        description: 'Platform Update Mode'
        required: true
        default: 'No migration required'
        type: choice
        options:
        - No migration required
        - Migrate data
      deploymentMode:
        description: 'Deployment Mode'
        required: true
        default: 'Rolling Update'
        type: choice
        options:
        - Rolling Update
        - Recreate

env:
  AUTH_TOKEN: ${{ secrets.AUTH_TOKEN }}
  SUBSCRIPTION_CODE: ${{ secrets.SUBSCRIPTION_CODE }}
  CCV2_BUILD_URL: https://portalrotapi.hana.ondemand.com/v2/subscriptions/${{ secrets.SUBSCRIPTION_CODE }}/builds
  BUILD_CODE: ${{ inputs.buildCode }}
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check if build is successfully done or not in CCV2 using API and then only deploy
      run: |
       echo ${{ inputs.buildCode }}
       echo ${{ inputs.targetEnvironment }}
       echo ${{ inputs.systemUpdate }}
       echo ${{ inputs.deploymentMode }}
       
       getBuildURL="${{ env.CCV2_BUILD_URL }}/${{ env.BUILD_CODE }}"
       echo "Build URL: $getBuildURL"
       buildData=$(curl --location --request GET "getBuildURL" -H "Authorization: Bearer ${{env.AUTH_TOKEN}}" -H 'Content-Type: application/json') 
       echo $buildData
       buildStatus=$(echo "$buildData" | jq -r '.status')

       echo "BUILD_STATUS=$buildStatus" >> $GITHUB_ENV
       echo "Build Status: ${{ env.BUILD_STATUS }}"
