name: CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      targetEnvironment:
        description: 'The target environment to deploy to'
        required: true
        type: string

jobs:

  approval:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event.inputs.targetEnvironment == 'D1' || github.event.inputs.targetEnvironment == 'P1' || github.event.inputs.targetEnvironment == 'PROD' }}
    environment:
      name: ${{ github.event.inputs.targetEnvironment }}
      url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

    steps:
    - name: Wait for approval
      run: echo "Waiting for manual approval..."

    - name: Fetch Deployment ID
      id: fetch-deployment-id
      run: |
        DEPLOYMENT_ID=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/deployments" \
          | jq -r --arg env "${{ github.event.inputs.targetEnvironment }}" '.[] | select(.environment == $env) | .id' | head -n 1)
        
        echo "DEPLOYMENT_ID=$DEPLOYMENT_ID"
        echo "DEPLOYMENT_ID=$DEPLOYMENT_ID" >> $GITHUB_ENV

    - name: Fetch Approver Info
      id: fetch-approver
      run: |
        if [ -z "$DEPLOYMENT_ID" ]; then
          echo "No deployment found for the environment: ${{ github.event.inputs.targetEnvironment }}"
          exit 1
        fi

        DEPLOYMENT_STATUSES=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/deployments/$DEPLOYMENT_ID/statuses")
        
        echo "DEPLOYMENT_STATUSES=$DEPLOYMENT_STATUSES"

        APPROVERS=$(echo "$DEPLOYMENT_STATUSES" | jq -r '.[] | select(.state == "success") | .creator.login' | sort | uniq)
        
        echo "APPROVERS=$APPROVERS"
        echo "APPROVERS=$APPROVERS" >> $GITHUB_ENV
        
    - name: Print approver name
      run: echo ${{ env.APPROVERS }}
